name: Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security audit daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  # Detect what files changed to skip security checks for docs-only changes
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    # Always run for scheduled events (daily security audit)
    if: github.event_name == 'schedule' || github.event_name == 'push' || github.event_name == 'pull_request'
    outputs:
      rust: ${{ steps.changes.outputs.rust }}
      should_run: ${{ github.event_name == 'schedule' || steps.changes.outputs.rust == 'true' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check for changes
      uses: dorny/paths-filter@v3
      id: changes
      # Skip path filtering for scheduled runs
      if: github.event_name != 'schedule'
      with:
        filters: |
          rust:
            - '**/*.rs'
            - '**/Cargo.toml'
            - '**/Cargo.lock'
            - '.github/workflows/*.yml'
            - '.github/workflows/*.yaml'
            - 'deny.toml'
            - 'rust-toolchain'
            - 'rust-toolchain.toml'

  # Security audit for known vulnerabilities
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.should_run == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      uses: rustsec/audit-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

  # License and dependency check
  deny:
    name: License Check
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.should_run == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check licenses
      uses: EmbarkStudios/cargo-deny-action@v1
      with:
        log-level: warn
        command: check licenses bans

  # Supply chain security
  supply-chain:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    needs: changes
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changes.outputs.should_run == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Generate SBOM
      uses: anchore/sbom-action@v0
      with:
        artifact-name: sbom.spdx.json
        format: spdx-json

  # CodeQL analysis
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.should_run == 'true'
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      CODEQL_ENABLE_EXPERIMENTAL_FEATURES: true
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'rust'
        queries: security-and-quality

    - name: Build
      run: cargo build --all

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3