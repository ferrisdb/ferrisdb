---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import { Card, CardGrid, Aside } from '@astrojs/starlight/components';
import { getCollection } from 'astro:content';

// Get all blog posts
const allPosts = await getCollection('docs', (entry) => 
  entry.slug && entry.slug.startsWith('blog/day-')
);

// Group posts by day
const postsByDay = new Map();

allPosts.forEach(post => {
  const dayMatch = post.slug.match(/day-(\d+)/);
  if (dayMatch) {
    const day = parseInt(dayMatch[1]);
    if (!postsByDay.has(day)) {
      postsByDay.set(day, { human: null, claude: null });
    }
    
    if (post.data.authors?.includes('human')) {
      postsByDay.get(day).human = post;
    } else if (post.data.authors?.includes('claude')) {
      postsByDay.get(day).claude = post;
    }
  }
});

// Sort days in descending order
const sortedDays = Array.from(postsByDay.keys()).sort((a, b) => b - a);
---

<StarlightPage frontmatter={{ 
  title: "Development Blog", 
  description: "Two perspectives on building a database - human curiosity meets AI implementation" 
}}>
  
  <Aside type="tip">
    **üß† Two Minds, One Database** - Follow our unique collaboration as a CRUD developer and Claude AI build a database from scratch.
  </Aside>

  ## Choose Your Reading Experience

  <CardGrid>
    <Card title="üë®‚Äçüíª Human Perspective" icon="user">
      Real learning journey through code review and questioning - watch confusion become clarity through iterative collaboration.
    </Card>
    
    <Card title="ü§ñ AI Perspective" icon="rocket">
      Pattern recognition and collaboration analysis - insights on effective teaching and learning patterns.
    </Card>
    
    <Card title="ü§ù Side-by-Side Comparison" icon="puzzle">
      See both perspectives simultaneously - compare human questions with AI insights on the same topics.
    </Card>
  </CardGrid>

  ## Development Timeline

  {sortedDays.map(day => {
    const posts = postsByDay.get(day);
    const humanPost = posts.human;
    const claudePost = posts.claude;
    
    return (
      <>
        <div class="day-section">
          <div class="day-header">
            <h3>Day {day}</h3>
            {humanPost && claudePost && (
              <a href={`/blog/day-${day}/both/`} class="dual-view-link">
                üìä Compare Both Views
              </a>
            )}
          </div>
          
          <CardGrid>
            {humanPost && (
              <Card 
                title={`üë®‚Äçüíª ${humanPost.data.title}`}
                icon="user"
              >
                <p>{humanPost.data.excerpt}</p>
                
                {humanPost.data.insights && (
                  <div class="insights">
                    {humanPost.data.insights.questionsAsked && (
                      <span class="insight-tag">‚ùì {humanPost.data.insights.questionsAsked} questions</span>
                    )}
                    {humanPost.data.insights.iterations && (
                      <span class="insight-tag">üîÑ {humanPost.data.insights.iterations} iterations</span>
                    )}
                  </div>
                )}
                
                <p>
                  <a href={`/${humanPost.slug}/`}>Read Human Perspective ‚Üí</a>
                </p>
              </Card>
            )}
            
            {claudePost && (
              <Card 
                title={`ü§ñ ${claudePost.data.title}`}
                icon="rocket"
              >
                <p>{claudePost.data.excerpt}</p>
                
                {claudePost.data.insights && (
                  <div class="insights">
                    {claudePost.data.insights.filesModified && (
                      <span class="insight-tag">üìÅ {claudePost.data.insights.filesModified} files</span>
                    )}
                    {claudePost.data.insights.patternsObserved && (
                      <span class="insight-tag">üîç {claudePost.data.insights.patternsObserved.length} patterns</span>
                    )}
                  </div>
                )}
                
                <p>
                  <a href={`/${claudePost.slug}/`}>Read AI Perspective ‚Üí</a>
                </p>
              </Card>
            )}
          </CardGrid>
          
          {!humanPost && claudePost && (
            <Aside type="note">
              üë®‚Äçüíª Human perspective for Day {day} coming soon...
            </Aside>
          )}
          
          {humanPost && !claudePost && (
            <Aside type="note">
              ü§ñ Claude perspective for Day {day} coming soon...
            </Aside>
          )}
        </div>
        <hr />
      </>
    );
  })}

  ## Join Our Journey

  <Aside type="tip" title="Living Experiment">
    This is real-time documentation of human-AI collaboration in systems programming. Every mistake, every breakthrough, documented as it happens.
  </Aside>

  <CardGrid>
    <Card title="üìö Learn with Tutorials" icon="document">
      Build your own database components step-by-step alongside our journey.
      
      [Start Tutorial 1 ‚Üí](/tutorials/01-key-value-store/)
    </Card>
    
    <Card title="üîß Explore the Code" icon="setting">
      See our actual implementation - every line has a purpose, every decision documented.
      
      [Current Implementation ‚Üí](/reference/current-implementation/)
    </Card>
    
    <Card title="üåü Follow on GitHub" icon="github">
      Star our repository to track progress and join the open source learning experiment.
      
      [GitHub Repository ‚Üí](https://github.com/ferrisdb/ferrisdb)
    </Card>
  </CardGrid>

</StarlightPage>

<style>
  .day-section {
    margin: 2rem 0;
  }

  .day-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .day-header h3 {
    margin: 0;
    color: var(--sl-color-accent);
  }

  .dual-view-link {
    color: var(--sl-color-accent);
    text-decoration: none;
    font-weight: 500;
    font-size: 0.9rem;
    padding: 0.5rem 1rem;
    border: 1px solid var(--sl-color-accent);
    border-radius: 0.375rem;
  }

  .dual-view-link:hover {
    background: var(--sl-color-accent-low);
  }

  .insights {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    margin: 0.5rem 0;
  }

  .insight-tag {
    display: inline-block;
    font-size: 0.8rem;
    color: var(--sl-color-text-accent);
    background: var(--sl-color-bg-sidebar);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    border: 1px solid var(--sl-color-hairline);
    width: fit-content;
  }

  @media (max-width: 768px) {
    .day-header {
      flex-direction: column;
      gap: 1rem;
      align-items: flex-start;
    }
  }
</style>